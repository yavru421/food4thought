import{ar as d,C as l,an as p,ao as u}from"./index-De_pgNSz.js";import{GLTFLoader as h}from"./glTFLoader-FqmEKqJS.js";import"./index-CKzrTzGp.js";import"./svelte/svelte.js";import"./bone-DtfIUDFS.js";import"./rawTexture-Ce6_SCE0.js";import"./assetContainer-C0KM3ggG.js";import"./objectModelMapping-6Dyo1ngx.js";const t="KHR_materials_unlit";class m{constructor(e){this.name=t,this.order=210,this._loader=e,this.enabled=this._loader.isExtensionUsed(t)}dispose(){this._loader=null}loadMaterialPropertiesAsync(e,o,r){return h.LoadExtensionAsync(e,o,this.name,()=>this._loadUnlitPropertiesAsync(e,o,r))}_loadUnlitPropertiesAsync(e,o,r){if(!(r instanceof d))throw new Error(`${e}: Material type not supported`);const n=new Array;r.unlit=!0;const s=o.pbrMetallicRoughness;return s&&(s.baseColorFactor?(r.albedoColor=l.FromArray(s.baseColorFactor),r.alpha=s.baseColorFactor[3]):r.albedoColor=l.White(),s.baseColorTexture&&n.push(this._loader.loadTextureInfoAsync(`${e}/baseColorTexture`,s.baseColorTexture,a=>{a.name=`${r.name} (Base Color)`,r.albedoTexture=a}))),o.doubleSided&&(r.backFaceCulling=!1,r.twoSidedLighting=!0),this._loader.loadMaterialAlphaProperties(e,o,r),Promise.all(n).then(()=>{})}}p(t);u(t,!0,i=>new m(i));export{m as KHR_materials_unlit};
//# sourceMappingURL=KHR_materials_unlit-B-cWoA40.js.map
